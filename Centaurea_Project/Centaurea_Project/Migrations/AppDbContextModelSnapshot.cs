// <auto-generated />
using System;
using Centaurea_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Centaurea_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Centaurea_Project.Models.Concert", b =>
                {
                    b.Property<int>("ConcertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConcertId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PerformanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PerformerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketsCount")
                        .HasColumnType("int");

                    b.HasKey("ConcertId");

                    b.ToTable("Concert");
                });

            modelBuilder.Entity("Centaurea_Project.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConcertId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ConcertId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Centaurea_Project.Models.ClassicalConcert", b =>
                {
                    b.HasBaseType("Centaurea_Project.Models.Concert");

                    b.Property<string>("ComposersName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcertName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoiceType")
                        .HasColumnType("int");

                    b.ToTable("ClassicalConcerts", (string)null);
                });

            modelBuilder.Entity("Centaurea_Project.Models.Party", b =>
                {
                    b.HasBaseType("Centaurea_Project.Models.Concert");

                    b.Property<int>("AgeLimit")
                        .HasColumnType("int");

                    b.ToTable("Parties", (string)null);
                });

            modelBuilder.Entity("Centaurea_Project.Models.RegularConcert", b =>
                {
                    b.HasBaseType("Centaurea_Project.Models.Concert");

                    b.ToTable("RegularConcerts", (string)null);
                });

            modelBuilder.Entity("Centaurea_Project.Models.Ticket", b =>
                {
                    b.HasOne("Centaurea_Project.Models.Concert", "Concert")
                        .WithMany("Tickets")
                        .HasForeignKey("ConcertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concert");
                });

            modelBuilder.Entity("Centaurea_Project.Models.ClassicalConcert", b =>
                {
                    b.HasOne("Centaurea_Project.Models.Concert", null)
                        .WithOne()
                        .HasForeignKey("Centaurea_Project.Models.ClassicalConcert", "ConcertId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Centaurea_Project.Models.Party", b =>
                {
                    b.HasOne("Centaurea_Project.Models.Concert", null)
                        .WithOne()
                        .HasForeignKey("Centaurea_Project.Models.Party", "ConcertId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Centaurea_Project.Models.RegularConcert", b =>
                {
                    b.HasOne("Centaurea_Project.Models.Concert", null)
                        .WithOne()
                        .HasForeignKey("Centaurea_Project.Models.RegularConcert", "ConcertId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Centaurea_Project.Models.Concert", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
